# Generated by Django 5.2.7 on 2025-10-21 23:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        default="+51015431138",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Formato: '+999999999'. Hasta 15 dígitos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        default="informes@actechnology.com.pe",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "whatsapp",
                    models.CharField(
                        default="51999999999",
                        help_text="Solo números, sin +",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Formato: '+999999999'. Hasta 15 dígitos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="WhatsApp",
                    ),
                ),
                (
                    "whatsapp_message",
                    models.TextField(
                        default="Hola, me gustaría más información sobre sus soluciones integrales.",
                        verbose_name="Mensaje de WhatsApp",
                    ),
                ),
                ("facebook", models.URLField(blank=True, verbose_name="Facebook")),
                ("instagram", models.URLField(blank=True, verbose_name="Instagram")),
                ("linkedin", models.URLField(blank=True, verbose_name="LinkedIn")),
                ("youtube", models.URLField(blank=True, verbose_name="YouTube")),
                ("address", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ciudad"),
                ),
            ],
            options={
                "verbose_name": "Información de contacto",
                "verbose_name_plural": "Información de contacto",
            },
        ),
        migrations.CreateModel(
            name="HeroSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Proyectos INTEGRALES en tecnología",
                        max_length=200,
                        verbose_name="Título",
                    ),
                ),
                (
                    "subtitle",
                    models.TextField(
                        default="Integramos soluciones de audio, video, redes, domótica y seguridad.",
                        verbose_name="Subtítulo",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="hero/",
                        verbose_name="Imagen principal",
                    ),
                ),
                (
                    "cta1_label",
                    models.CharField(
                        default="Conoce el demo virtual",
                        max_length=100,
                        verbose_name="Etiqueta CTA 1",
                    ),
                ),
                (
                    "cta1_link",
                    models.URLField(default="#", verbose_name="Enlace CTA 1"),
                ),
                (
                    "cta1_icon",
                    models.CharField(
                        default="fa-solid fa-bolt",
                        max_length=50,
                        verbose_name="Icono CTA 1",
                    ),
                ),
                (
                    "cta2_label",
                    models.CharField(
                        default="Escríbenos por WhatsApp",
                        max_length=100,
                        verbose_name="Etiqueta CTA 2",
                    ),
                ),
                (
                    "cta2_link",
                    models.URLField(default="#", verbose_name="Enlace CTA 2"),
                ),
                (
                    "cta2_icon",
                    models.CharField(
                        default="fa-brands fa-whatsapp",
                        max_length=50,
                        verbose_name="Icono CTA 2",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sección Hero",
                "verbose_name_plural": "Sección Hero",
            },
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nombre")),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="partners/",
                        verbose_name="Logo",
                    ),
                ),
                (
                    "logo_url",
                    models.URLField(
                        blank=True,
                        help_text="URL alternativa del logo (si no se sube archivo)",
                        verbose_name="URL del logo",
                    ),
                ),
                ("website", models.URLField(blank=True, verbose_name="Sitio web")),
                ("order", models.IntegerField(default=0, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Marca aliada",
                "verbose_name_plural": "Marcas aliadas",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descripción")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="projects/",
                        verbose_name="Imagen",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("educativo", "Educativo"),
                            ("corporativo", "Corporativo"),
                            ("residencial", "Residencial"),
                            ("otro", "Otro"),
                        ],
                        default="corporativo",
                        max_length=20,
                        verbose_name="Categoría",
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Orden")),
                (
                    "featured",
                    models.BooleanField(default=False, verbose_name="Destacado"),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Proyecto",
                "verbose_name_plural": "Proyectos",
                "ordering": ["-featured", "order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("description", models.TextField(verbose_name="Descripción")),
                (
                    "icon",
                    models.CharField(
                        default="fa-solid fa-network-wired",
                        help_text="Clase de FontAwesome (ej: fa-solid fa-network-wired)",
                        max_length=50,
                        verbose_name="Icono",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="services/",
                        verbose_name="Imagen",
                    ),
                ),
                (
                    "point1",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Punto clave 1"
                    ),
                ),
                (
                    "point2",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Punto clave 2"
                    ),
                ),
                (
                    "point3",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Punto clave 3"
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Servicio",
                "verbose_name_plural": "Servicios",
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Showroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Visita nuestro Showroom",
                        max_length=200,
                        verbose_name="Título",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        default="Equipado con lo último en tecnología. Agenda una demostración.",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="showroom/",
                        verbose_name="Imagen",
                    ),
                ),
                ("url", models.URLField(default="#", verbose_name="Enlace")),
            ],
            options={
                "verbose_name": "Showroom",
                "verbose_name_plural": "Showroom",
            },
        ),
        migrations.CreateModel(
            name="SiteConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_title",
                    models.CharField(
                        default="AC Technology — Soluciones Integrales",
                        max_length=200,
                        verbose_name="Título del sitio",
                    ),
                ),
                (
                    "brand_name",
                    models.CharField(
                        default="AC Technology",
                        max_length=100,
                        verbose_name="Nombre de marca",
                    ),
                ),
                (
                    "tagline",
                    models.CharField(
                        default="Soluciones integrales: corporativo, educativo y residencial",
                        max_length=200,
                        verbose_name="Lema",
                    ),
                ),
                (
                    "primary_color",
                    models.CharField(
                        default="#2a9dff", max_length=7, verbose_name="Color primario"
                    ),
                ),
                (
                    "accent_color",
                    models.CharField(
                        default="#00c9b7", max_length=7, verbose_name="Color de acento"
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración del sitio",
                "verbose_name_plural": "Configuración del sitio",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrador"),
                            ("editor", "Editor"),
                            ("viewer", "Visualizador"),
                        ],
                        default="editor",
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Teléfono"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
